/*!
@ng-dynamic-forms/ui-ionic 1.4.34 2017-10-26 13:27 UTC
Copyright (c) 2016-2017, Udo Sch√∂fer http://www.udos86.de

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
*/
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@ng-dynamic-forms/core"),require("ionic-angular"),require("@angular/common"),require("@angular/forms"),require("angular2-text-mask")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@ng-dynamic-forms/core","ionic-angular","@angular/common","@angular/forms","angular2-text-mask"],n):n((e.ngDF=e.ngDF||{},e.ngDF.ionicUI={}),e.ng.core,e.ngDF.core,e["ionic-angular"],e.ng.common,e.ng.forms,e["angular2-text-mask"])}(this,function(e,n,o,t,l,r,i){"use strict";var a=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var o in n)n.hasOwnProperty(o)&&(e[o]=n[o])};return function(n,o){function t(){this.constructor=n}e(n,o),n.prototype=null===o?Object.create(o):(t.prototype=o.prototype,new t)}}(),c=function(e){function l(o,t){var l=e.call(this,o,t)||this;return l.changeDetectorRef=o,l.validationService=t,l.bindId=!0,l.context=null,l.hasErrorMessaging=!1,l.blur=new n.EventEmitter,l.change=new n.EventEmitter,l.focus=new n.EventEmitter,l.customEvent=new n.EventEmitter,l}return a(l,e),l.prototype.ngOnChanges=function(n){e.prototype.ngOnChanges.call(this,n),n.model&&(this.type=l.getFormControlType(this.model))},l.prototype.hasCustomTemplate=function(){return 0!==this.customTemplate.nativeElement.children.length},l.getFormControlType=function(e){switch(e.type){case o.DYNAMIC_FORM_CONTROL_TYPE_ARRAY:return 1;case o.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:return 2;case o.DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:case o.DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:return 3;case o.DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:case o.DYNAMIC_FORM_CONTROL_TYPE_GROUP:return 4;case o.DYNAMIC_FORM_CONTROL_TYPE_INPUT:return 5;case o.DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:return 6;case o.DYNAMIC_FORM_CONTROL_TYPE_SELECT:return 8;case o.DYNAMIC_FORM_CONTROL_TYPE_SLIDER:return 7;case o.DYNAMIC_FORM_CONTROL_TYPE_SWITCH:return 10;case o.DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:return 9;default:return null}},l.decorators=[{type:n.Component,args:[{selector:"dynamic-ionic-form-control,dynamic-form-ionic-control",template:'<div [formGroup]="group" [ngClass]="[model.cls.element.container, model.cls.grid.container]"><ng-container *ngIf="type !== 1 && template?.align === \'START\'"><ng-container *ngTemplateOutlet="template?.templateRef; context: model"></ng-container></ng-container><div *ngIf="type === 1" [dynamicId]="bindId && model.id" [formArrayName]="model.id" [ngClass]="model.cls.element.control"><fieldset *ngFor="let groupModel of model.groups; let idx = index" role="group" [formGroupName]="idx" [ngClass]="[model.cls.element.group, model.cls.grid.group]"><dynamic-ionic-form-control *ngFor="let controlModel of groupModel.group" [bindId]="false" [context]="groupModel" [group]="control.at(idx)" [hasErrorMessaging]="controlModel.hasErrorMessages" [model]="controlModel" [templates]="templates" [ngClass]="[controlModel.cls.element.host, controlModel.cls.grid.host]" (dfBlur)="onBlur($event)" (dfChange)="onValueChange($event)" (dfFocus)="onFocus($event)" (ionEvent)="onCustomEvent($event)"></dynamic-ionic-form-control><ng-container *ngTemplateOutlet="template?.templateRef; context: groupModel"></ng-container></fieldset></div><fieldset *ngIf="type === 4" [dynamicId]="bindId && model.id" [formGroupName]="model.id" [name]="model.name" [ngClass]="model.cls.element.control"><legend *ngIf="model.legend" [innerHTML]="model.legend"></legend><dynamic-ionic-form-control *ngFor="let controlModel of model.group" [group]="control" [hasErrorMessaging]="controlModel.hasErrorMessages" [model]="controlModel" [templates]="templates" [ngClass]="[controlModel.cls.element.host, controlModel.cls.grid.host]" (dfBlur)="onBlur($event)" (dfChange)="onValueChange($event)" (dfFocus)="onFocus($event)" (ionEvent)="onCustomEvent($event)"></dynamic-ionic-form-control></fieldset><ion-list *ngIf="type === 6" radio-group [dynamicId]="bindId && model.id" [formControlName]="model.id" [ngClass]="model.cls.element.control" (ionChange)="onValueChange($event)"><ion-list-header *ngIf="model.label !== null">{{model.label}}</ion-list-header><ion-item *ngFor="let option of model.options$ | async" [ngClass]="model.cls.element.option"><ion-label>{{option.label}}</ion-label><ion-radio [value]="option.value"></ion-radio></ion-item></ion-list><ion-item *ngIf="type !== 1 && type !== 4 && type !== 6" [ngSwitch]="type"><ion-label *ngIf="(model.label !== null) && (type !== 2)" floating [innerHTML]="model.label" [ngClass]="[model.cls.element.label, model.cls.grid.label]"></ion-label><ion-label *ngIf="(model.label !== null) && (type === 2)" [innerHTML]="model.label" [ngClass]="[model.cls.element.label, model.cls.grid.label]"></ion-label><ion-checkbox *ngSwitchCase="2" [checked]="model.checked" [dynamicId]="bindId && model.id" [formControlName]="model.id" [ngClass]="model.cls.element.control" (ionBlur)="onBlur($event)" (ionChange)="onValueChange($event)" (ionFocus)="onFocus($event)"></ion-checkbox><ion-datetime *ngSwitchCase="3" [displayFormat]="model.format" [dynamicId]="bindId && model.id" [formControlName]="model.id" [max]="model.max" [min]="model.min" [ngClass]="model.cls.element.control" (ionBlur)="onBlur($event)" (ionCancel)="onCustomEvent($event, \'ionCancel\')" (ionChange)="onValueChange($event)" (ionFocus)="onFocus($event)"></ion-datetime><ion-input *ngSwitchCase="5" clearInput="true" [dynamicId]="bindId && model.id" [formControlName]="model.id" [max]="model.max" [min]="model.min" [ngClass]="model.cls.element.control" [readonly]="model.readOnly" [step]="model.step" [textMask]="{mask: (model.mask || false), showMask: model.mask && !(model.placeholder)}" [type]="model.inputType" (ionBlur)="onBlur($event)" (ionChange)="onValueChange($event)" (ionFocus)="onFocus($event)"></ion-input><ion-range *ngSwitchCase="7" [dynamicId]="bindId && model.id" [formControlName]="model.id" [max]="model.max" [min]="model.min" [ngClass]="model.cls.element.control" [pin]="true" [snaps]="true" [step]="model.step" (ionBlur)="onBlur($event)" (ionChange)="onValueChange($event)" (ionFocus)="onFocus($event)"></ion-range><ion-select *ngSwitchCase="8" [dynamicId]="bindId && model.id" [formControlName]="model.id" [multiple]="model.multiple" [ngClass]="model.cls.element.control" (ionBlur)="onBlur($event)" (ionChange)="onValueChange($event)" (ionFocus)="onFocus($event)"><ion-option *ngFor="let option of model.options$ | async" [value]="option.value">{{ option.label }}</ion-option></ion-select><ion-textarea *ngSwitchCase="9" clearInput="true" [dynamicId]="bindId && model.id" [formControlName]="model.id" [ngClass]="model.cls.element.control" [readonly]="model.readOnly" (ionBlur)="onBlur($event)" (ionChange)="onValueChange($event)" (ionFocus)="onFocus($event)"></ion-textarea><ion-toggle *ngSwitchCase="10" [checked]="model.checked" [dynamicId]="bindId && model.id" [formControlName]="model.id" [ngClass]="model.cls.element.control" (ionBlur)="onBlur($event)" (ionChange)="onValueChange($event)" (ionFocus)="onFocus($event)"></ion-toggle></ion-item><p *ngIf="model.placeholder" class="hint form-hint">{{model.placeholder}}</p><div *ngIf="hasErrorMessaging" [hidden]="!showErrorMessages"><p class="has-error"><span *ngFor="let message of errorMessages">{{message}}</span></p></div><ng-container *ngIf="type !== 1 && template?.align === \'END\'"><ng-container *ngTemplateOutlet="template?.templateRef; context: model"></ng-container></ng-container><div #customTemplate><ng-content></ng-content></div></div>'}]}],l.ctorParameters=function(){return[{type:n.ChangeDetectorRef},{type:o.DynamicFormValidationService}]},l.propDecorators={contentTemplates:[{type:n.ContentChildren,args:[o.DynamicTemplateDirective]}],inputTemplates:[{type:n.Input,args:["templates"]}],bindId:[{type:n.Input}],context:[{type:n.Input}],group:[{type:n.Input}],hasErrorMessaging:[{type:n.Input}],model:[{type:n.Input}],blur:[{type:n.Output,args:["dfBlur"]}],change:[{type:n.Output,args:["dfChange"]}],focus:[{type:n.Output,args:["dfFocus"]}],customEvent:[{type:n.Output,args:["ionEvent"]}],ionCheckbox:[{type:n.ViewChild,args:[t.Checkbox]}],ionDateTime:[{type:n.ViewChild,args:[t.DateTime]}],ionInput:[{type:n.ViewChild,args:[t.TextInput]}],ionRadioGroup:[{type:n.ViewChild,args:[t.RadioGroup]}],ionRange:[{type:n.ViewChild,args:[t.Range]}],ionSelect:[{type:n.ViewChild,args:[t.Select]}],ionToggle:[{type:n.ViewChild,args:[t.Toggle]}],customTemplate:[{type:n.ViewChild,args:["customTemplate"]}]},l}(o.DynamicFormControlComponent),s=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var o in n)n.hasOwnProperty(o)&&(e[o]=n[o])};return function(n,o){function t(){this.constructor=n}e(n,o),n.prototype=null===o?Object.create(o):(t.prototype=o.prototype,new t)}}(),m=function(e){function t(){var o=null!==e&&e.apply(this,arguments)||this;return o.blur=new n.EventEmitter,o.change=new n.EventEmitter,o.focus=new n.EventEmitter,o.customEvent=new n.EventEmitter,o}return s(t,e),t.decorators=[{type:n.Component,args:[{selector:"dynamic-ionic-form",template:'<dynamic-ionic-form-control *ngFor="let controlModel of model; trackBy: trackByFn" [group]="group" [model]="controlModel" [ngClass]="[controlModel.cls.element.host, controlModel.cls.grid.host]" [templates]="templates" (dfBlur)="onEvent($event, 1)" (dfChange)="onEvent($event, 2)" (dfFocus)="onEvent($event, 3)" (ionEvent)="onEvent($event, 4)"></dynamic-ionic-form-control>'}]}],t.ctorParameters=function(){return[]},t.propDecorators={group:[{type:n.Input}],model:[{type:n.Input}],blur:[{type:n.Output,args:["dfBlur"]}],change:[{type:n.Output,args:["dfChange"]}],focus:[{type:n.Output,args:["dfFocus"]}],customEvent:[{type:n.Output,args:["ionEvent"]}],templates:[{type:n.ContentChildren,args:[o.DynamicTemplateDirective]}],components:[{type:n.ViewChildren,args:[c]}]},t}(o.DynamicFormComponent),d=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{imports:[l.CommonModule,r.ReactiveFormsModule,t.IonicModule,i.TextMaskModule,o.DynamicFormsCoreModule],declarations:[c,m],exports:[o.DynamicFormsCoreModule,c,m]}]}],e.ctorParameters=function(){return[]},e}();e.DynamicIonicFormComponent=m,e.DynamicIonicFormControlComponent=c,e.DynamicFormsIonicUIModule=d,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ui-ionic.umd.min.js.map
