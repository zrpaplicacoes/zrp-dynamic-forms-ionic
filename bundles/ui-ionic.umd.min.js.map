{"version":3,"file":"ui-ionic.umd.min.js","sources":["../../../../packages/ui-ionic/src/dynamic-ionic-form-control.component.ts","../../../../packages/ui-ionic/src/dynamic-ionic-form.component.ts","../../../../packages/ui-ionic/src/dynamic-ionic-form-ui.module.ts"],"sourcesContent":["import {\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    ElementRef,\n    Input,\n    OnChanges,\n    Output,\n    QueryList,\n    SimpleChanges,\n    ViewChild\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { Checkbox, DateTime, TextInput, RadioGroup, Range, Select, Toggle } from \"ionic-angular\";\nimport {\n    DynamicFormValidationService,\n    DynamicFormControlComponent,\n    DynamicFormControlModel,\n    DynamicFormArrayGroupModel,\n    DynamicFormControlEvent,\n    DynamicTemplateDirective,\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX,\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP,\n    DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER,\n    DYNAMIC_FORM_CONTROL_TYPE_GROUP,\n    DYNAMIC_FORM_CONTROL_TYPE_INPUT,\n    DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP,\n    DYNAMIC_FORM_CONTROL_TYPE_SELECT,\n    DYNAMIC_FORM_CONTROL_TYPE_SLIDER,\n    DYNAMIC_FORM_CONTROL_TYPE_SWITCH,\n    DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA,\n    DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER\n} from \"@ng-dynamic-forms/core\";\n\nexport const enum IonicFormControlType {\n\n    Array = 1, //\"ARRAY\",\n    Checkbox = 2, //\"CHECKBOX\",\n    DateTime = 3, //\"DATETIME\",\n    Group = 4, //\"GROUP\",\n    Input = 5, //\"INPUT\",\n    RadioGroup = 6, //\"RADIO_GROUP\",\n    Range = 7, //\"RANGE\",\n    Select = 8, //\"SELECT\",\n    TextArea = 9, //\"TEXTAREA\",\n    Toggle = 10, //\"TOGGLE\"\n}\n\n@Component({\n    selector: \"dynamic-ionic-form-control,dynamic-form-ionic-control\",\n    templateUrl: \"./dynamic-ionic-form-control.component.html\"\n})\nexport class DynamicIonicFormControlComponent extends DynamicFormControlComponent implements OnChanges {\n\n    @ContentChildren(DynamicTemplateDirective) contentTemplates: QueryList<DynamicTemplateDirective>;\n    @Input(\"templates\") inputTemplates: QueryList<DynamicTemplateDirective>;\n\n    @Input() bindId: boolean = true;\n    @Input() context: DynamicFormArrayGroupModel | null = null;\n    @Input() group: FormGroup;\n    @Input() hasErrorMessaging: boolean = false;\n    @Input() model: DynamicFormControlModel;\n\n    @Output(\"dfBlur\") blur: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output(\"dfChange\") change: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output(\"dfFocus\") focus: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output(\"ionEvent\") customEvent: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n\n    @ViewChild(Checkbox) ionCheckbox: Checkbox | undefined;\n    @ViewChild(DateTime) ionDateTime: DateTime | undefined;\n    @ViewChild(TextInput) ionInput: TextInput | undefined;\n    @ViewChild(RadioGroup) ionRadioGroup: RadioGroup | undefined;\n    @ViewChild(Range) ionRange: Range | undefined;\n    @ViewChild(Select) ionSelect: Select | undefined;\n    @ViewChild(Toggle) ionToggle: Toggle | undefined;\n    @ViewChild(\"customTemplate\") customTemplate: ElementRef;\n\n    type: IonicFormControlType | null;\n\n    constructor(protected changeDetectorRef: ChangeDetectorRef,\n                protected validationService: DynamicFormValidationService) {\n\n        super(changeDetectorRef, validationService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        super.ngOnChanges(changes);\n\n        if (changes[\"model\"]) {\n            this.type = DynamicIonicFormControlComponent.getFormControlType(this.model);\n        }\n    }\n\n    hasCustomTemplate() {\n        return this.customTemplate.nativeElement.children.length !== 0;\n    }\n\n\n    static getFormControlType(model: DynamicFormControlModel): IonicFormControlType | null {\n\n        switch (model.type) {\n\n            case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n                return IonicFormControlType.Array;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n                return IonicFormControlType.Checkbox;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER:\n            case DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER:\n                return IonicFormControlType.DateTime;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n            case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                return IonicFormControlType.Group;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n                return IonicFormControlType.Input;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n                return IonicFormControlType.RadioGroup;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n                return IonicFormControlType.Select;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_SLIDER:\n                return IonicFormControlType.Range;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_SWITCH:\n                return IonicFormControlType.Toggle;\n\n            case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n                return IonicFormControlType.TextArea;\n\n            default:\n                return null;\n        }\n    }\n}\n","import { Component, ContentChildren, EventEmitter, Input, Output, QueryList, ViewChildren } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport {\n    DynamicFormComponent,\n    DynamicFormControlEvent,\n    DynamicFormControlModel,\n    DynamicTemplateDirective\n} from \"@ng-dynamic-forms/core\";\nimport { DynamicIonicFormControlComponent } from \"./dynamic-ionic-form-control.component\";\n\n@Component({\n    selector: \"dynamic-ionic-form\",\n    templateUrl: \"./dynamic-ionic-form.component.html\"\n})\nexport class DynamicIonicFormComponent extends DynamicFormComponent {\n\n    @Input() group: FormGroup;\n    @Input() model: DynamicFormControlModel[];\n\n    @Output(\"dfBlur\") blur: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output(\"dfChange\") change: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output(\"dfFocus\") focus: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n    @Output(\"ionEvent\") customEvent: EventEmitter<DynamicFormControlEvent> = new EventEmitter<DynamicFormControlEvent>();\n\n    @ContentChildren(DynamicTemplateDirective) templates: QueryList<DynamicTemplateDirective>;\n\n    @ViewChildren(DynamicIonicFormControlComponent) components: QueryList<DynamicIonicFormControlComponent>;\n}","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { IonicModule } from \"ionic-angular\";\nimport { TextMaskModule } from \"angular2-text-mask\";\nimport { DynamicFormsCoreModule } from \"@ng-dynamic-forms/core\";\nimport { DynamicIonicFormControlComponent } from \"./dynamic-ionic-form-control.component\";\nimport { DynamicIonicFormComponent } from \"./dynamic-ionic-form.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        IonicModule,\n        TextMaskModule,\n        DynamicFormsCoreModule\n    ],\n    declarations: [\n        DynamicIonicFormControlComponent,\n        DynamicIonicFormComponent\n    ],\n    exports: [\n        DynamicFormsCoreModule,\n        DynamicIonicFormControlComponent,\n        DynamicIonicFormComponent\n    ]\n})\nexport class DynamicFormsIonicUIModule {\n}"],"names":["changeDetectorRef","validationService","_super","_this","EventEmitter","__extends","DynamicIonicFormControlComponent","changes","ngOnChanges","this","type","getFormControlType","model","customTemplate","nativeElement","children","length","DYNAMIC_FORM_CONTROL_TYPE_ARRAY","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX","DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER","DYNAMIC_FORM_CONTROL_TYPE_TIMEPICKER","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP","DYNAMIC_FORM_CONTROL_TYPE_GROUP","DYNAMIC_FORM_CONTROL_TYPE_INPUT","DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP","DYNAMIC_FORM_CONTROL_TYPE_SELECT","DYNAMIC_FORM_CONTROL_TYPE_SLIDER","DYNAMIC_FORM_CONTROL_TYPE_SWITCH","DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA","Component","args","selector","template","ChangeDetectorRef","DynamicFormValidationService","contentTemplates","ContentChildren","DynamicTemplateDirective","inputTemplates","Input","bindId","context","group","hasErrorMessaging","blur","Output","change","focus","customEvent","ionCheckbox","ViewChild","Checkbox","ionDateTime","DateTime","ionInput","TextInput","ionRadioGroup","RadioGroup","ionRange","Range","ionSelect","Select","ionToggle","Toggle","DynamicFormControlComponent","DynamicIonicFormComponent","templates","components","ViewChildren","DynamicFormComponent","DynamicFormsIonicUIModule","NgModule","imports","CommonModule","ReactiveFormsModule","IonicModule","TextMaskModule","DynamicFormsCoreModule","declarations","exports"],"mappings":";;;;;;;;;;;;;;;;o6BA+EA,WAD0BA,EACAC,GAA1B,MAGQC,YAAMF,EAAmBC,gBAJPE,oBAAAH,EACAG,oBAAAF,EAzBrBE,UAEkB,EADlBA,UAE6C,KAA7CA,qBAE6B,EAC7BA,OAE8C,IAAIC,eADlDD,SAEgD,IAAIC,eADpDD,QAE+C,IAAIC,eADnDD,cAEqD,IAAIC,iBAkH9D,OAhICC,OAqCDC,wBAAA,SAJKC,GAKGL,YAJMM,sBAAYD,GAMdA,EAJS,QAKTE,KAJKC,KAAOJ,EAAiCK,mBAAmBF,KAAKG,SAUjFN,8BAAA,WACQ,OAN6D,IAAtDG,KAAKI,eAAeC,cAAcC,SAASC,QAIrDV,qBAQL,SARKM,GAUG,OAAQA,EARMF,MAUV,KARKO,kCASD,SAEJ,KARKC,qCASD,SAEJ,KARKC,uCASL,KARKC,uCASD,SAEJ,KARKC,2CASL,KARKC,kCASD,SAEJ,KARKC,kCASD,SAEJ,KARKC,wCASD,SAEJ,KARKC,mCASD,SAEJ,KARKC,mCASD,SAEJ,KARKC,mCASD,UAEJ,KARKC,qCASD,SAEJ,QACI,OARO,OAGhBtB,eACLI,KAAMmB,YAAWC,OASfC,SARU,wDASVC,oxKAJH1B,iBAAA,WAAA,QAWAI,KAAMuB,sBACNvB,KAAMwB,kCARA5B,kBAWP6B,mBAVuBzB,KAAM0B,kBAAiBN,MAAMO,8BAWpDC,iBAVqB5B,KAAM6B,QAAOT,MAAM,eAWxCU,SAVa9B,KAAM6B,UAWnBE,UAVc/B,KAAM6B,UAWpBG,QAVYhC,KAAM6B,UAWlBI,oBAVwBjC,KAAM6B,UAW9B3B,QAVYF,KAAM6B,UAWlBK,OAVWlC,KAAMmC,SAAQf,MAAM,YAW/BgB,SAVapC,KAAMmC,SAAQf,MAAM,cAWjCiB,QAVYrC,KAAMmC,SAAQf,MAAM,aAWhCkB,cAVkBtC,KAAMmC,SAAQf,MAAM,cAWtCmB,cAVkBvC,KAAMwC,YAAWpB,MAAMqB,cAWzCC,cAVkB1C,KAAMwC,YAAWpB,MAAMuB,cAWzCC,WAVe5C,KAAMwC,YAAWpB,MAAMyB,eAWtCC,gBAVoB9C,KAAMwC,YAAWpB,MAAM2B,gBAW3CC,WAVehD,KAAMwC,YAAWpB,MAAM6B,WAWtCC,YAVgBlD,KAAMwC,YAAWpB,MAAM+B,YAWvCC,YAVgBpD,KAAMwC,YAAWpB,MAAMiC,YAWvClD,iBAVqBH,KAAMwC,YAAWpB,MAAM,wBApH3CkC,gXC1CD,aAAA,qDAKK7D,OAE8C,IAAIC,eADlDD,SAEgD,IAAIC,eADpDD,QAE+C,IAAIC,eADnDD,cAEqD,IAAIC,iBAwB9D,OAhCCC,OAaM4D,eACLvD,KAAMmB,YAAWC,OADfC,SAEU,qBADVC,oYAMHiC,iBAAA,WAAA,UAEMA,kBACPvB,QAAYhC,KAAM6B,UAClB3B,QAAYF,KAAM6B,UAClBK,OAAWlC,KAAMmC,SAAQf,MAAM,YAC/BgB,SAAapC,KAAMmC,SAAQf,MAAM,cACjCiB,QAAYrC,KAAMmC,SAAQf,MAAM,aAChCkB,cAAkBtC,KAAMmC,SAAQf,MAAM,cACtCoC,YAAgBxD,KAAM0B,kBAAiBN,MAAMO,8BAC7C8B,aAAiBzD,KAAM0D,eAActC,MAAMxB,SA9B1C+D,qCCHD,cA0BA,OAvBOC,eACL5D,KAAM6D,WAAUzC,OADd0C,SACIC,eACAC,sBACAC,cACAC,iBACAC,0BAEJC,cACIxE,EACA2D,GAEJc,SACIF,yBACAvE,EACA2D,OAOPK,iBAAA,WAAA"}